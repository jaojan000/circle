name: Build ImmortalWrt Rockchip ARMv8 Docker

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils \
          rsync unzip zlib1g-dev file wget curl

    - name: Clone ImmortalWrt
      run: |
        git clone https://github.com/immortalwrt/immortalwrt.git openwrt
        cd openwrt

        # 替换 feeds.conf.default
        cat > feeds.conf.default <<'EOF'
src-git packages https://github.com/coolsnowwolf/packages
src-git luci https://github.com/coolsnowwolf/luci
src-git routing https://github.com/coolsnowwolf/routing
src-git telephony https://github.com/coolsnowwolf/telephony

# OpenClash
src-git openclash https://github.com/vernesong/OpenClash.git

# Nikki
src-git nikki https://github.com/nikkinikki-org/nikki.git
EOF

        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Generate Config
      run: |
        cd openwrt
        rm -f .config

        # Rockchip ARMv8
        echo "CONFIG_TARGET_rockchip=y" >> .config
        echo "CONFIG_TARGET_rockchip_armv8=y" >> .config
        echo "CONFIG_TARGET_ROOTFS_TARGZ=y" >> .config
        echo "CONFIG_TARGET_IMAGES_GZIP=y" >> .config

        # LuCI & 基础
        echo "CONFIG_PACKAGE_luci=y" >> .config
        echo "CONFIG_PACKAGE_luci-compat=y" >> .config
        echo "CONFIG_PACKAGE_luci-base=y" >> .config

        # Docker & Dockerman
        echo "CONFIG_PACKAGE_docker=y" >> .config
        echo "CONFIG_PACKAGE_dockerd=y" >> .config
        echo "CONFIG_PACKAGE_luci-app-dockerman=y" >> .config

        # OpenClash
        echo "CONFIG_PACKAGE_luci-app-openclash=y" >> .config

        # Nikki
        echo "CONFIG_PACKAGE_nikki=y" >> .config

        # SFTP server
        echo "CONFIG_PACKAGE_openssh-sftp-server=y" >> .config
        echo "CONFIG_PACKAGE_openssh-server=y" >> .config

        # 默认 IP 用 uci-defaults
        mkdir -p files/etc/uci-defaults
        cat > files/etc/uci-defaults/99-custom-ip <<'EOF'
#!/bin/sh
uci set network.lan.ipaddr='192.168.8.8'
uci commit network
exit 0
EOF
        chmod +x files/etc/uci-defaults/99-custom-ip

    - name: Build
      run: |
        cd openwrt
        make defconfig
        make -j$(nproc) || make -j1 V=s

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: immortalwrt-rockchip-docker-rootfs
        path: openwrt/bin/targets/rockchip/armv8/*rootfs.tar.gz


